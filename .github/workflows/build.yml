name: Build and Upload Release Assets

on:
  create:
    tags:
      - "v*" # Trigger the workflow when a new tag starting with 'v' is created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.ref }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Build and package binaries
        run: |
          # Build binaries for different platforms
          env GOOS=windows GOARCH=amd64 go build -o git-utils-${{ github.event.ref }}-windows/git-utils.exe
          env GOOS=darwin GOARCH=amd64 go build -o git-utils-${{ github.event.ref }}-apple/git-utils
          env GOOS=linux GOARCH=amd64 go build -o git-utils-${{ github.event.ref }}-linux/git-utils

      - name: Copy README and LICENSE to Binaries
        run: |
          for dir in git-utils-${{ github.event.ref }}-windows git-utils-${{ github.event.ref }}-apple git-utils-${{ github.event.ref }}-linux; do
            cp README.md $dir/
            cp LICENSE $dir/
          done

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.ref }}
          release_name: Release ${{ github.event.ref }}
          draft: false
          prerelease: false

      - name: Archive Windows Binary
        run: zip -r git-utils-${{ github.event.ref }}-windows.zip git-utils-${{ github.event.ref }}-windows/

      - name: Archive Apple Binary
        run: tar -czvf git-utils-${{ github.event.ref }}-apple.tar.gz git-utils-${{ github.event.ref }}-apple/

      - name: Archive Linux Binary
        run: tar -czvf git-utils-${{ github.event.ref }}-linux.tar.gz git-utils-${{ github.event.ref }}-linux/

      - name: Upload Windows Asset
        id: upload_windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./git-utils-${{ github.event.ref }}-windows.zip
          asset_name: git-utils-${{ github.event.ref }}-windows.zip
          asset_content_type: application/zip

      - name: Upload Apple Asset
        id: upload_apple
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./git-utils-${{ github.event.ref }}-apple.tar.gz
          asset_name: git-utils-${{ github.event.ref }}-apple.tar.gz
          asset_content_type: application/x-gzip

      - name: Upload Linux Asset
        id: upload_linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./git-utils-${{ github.event.ref }}-linux.tar.gz
          asset_name: git-utils-${{ github.event.ref }}-linux.tar.gz
          asset_content_type: application/x-gzip
